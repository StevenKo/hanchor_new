.product-desc.tab-inner.tab-inner-article.tab-2.active
  / rating and comment
  %div
    = form_with url: comments_path, data: { type: :json }, id: "add_comment" do |form|
      / rating upper
      .rt-upper.flex-sec.mg-b-10
        .pic.flex-2
          = image_tag(@product.thumb.pic_url)
        .con.flex-2
          %h2.name.mg-v-10= @product.name
          .stars.stars-example-css.stars-lb.mg-b-20.inlineblock.mg-r-10
            %p.text-13.color-gray-666.lh-30
              =t("comments.average")
              %span.text-20.bold.color-lb= @rating
              =t("comments.rate_unit")
            %select.star-sel-rdly{"data-current-rating" => @rating, name: "rating"}
              @rating  autocomplete="off"&gt;
              %option{value: "1"} 1
              %option{value: "2"} 2
              %option{value: "3"} 3
              %option{value: "4"} 4
              %option{value: "5"} 5
          .stars.stars-example-css.mg-b-10.inlineblock
            %p.text-13.color-gray-666.lh-30
              =t("comments.your_rate")
            %select.star-sel{name: "rating"}
              = options_for_select([1, 2, 3, 4, 5], [5])
      / rating upper
      = form.text_field :name, class: "input-text mg-b-10", placeholder: t('comments.placeholder.name'), id: "name-input" if !current_user
      / comment
      = form.text_area :context, class: "rt-textarea mg-b-10", placeholder: t('comments.placeholder.review'), id: "context-input"
      / comment
      = hidden_field_tag :product_id, @product.id
      = form.submit t("comments.submit"), class: "btn-m btn-blue inlineblock-imp mg-b-10", hov: "0.75"
      / <button class="btn-m btn-blue inlineblock-imp mg-b-10" hov="0.75">送出</button>
  / rating and comment
  #comments-list
    - @comments.each do |comment|
      .one-rt-common
        %div
          %h2.name= comment&.user&.name || comment.name
          %p.date.text-12.lh-13.mg-b-10.color-gray-aaa
            = comment.created_at.strftime("%Y/%m/%d")
          .stars.stars-example-css.mg-b-10
            %select.star-sel-fixed{autocomplete: "off", name: "rating"}
              = options_for_select([1, 2, 3, 4, 5], [comment.rating])
          %p.comment
            = comment.context
        - if @comments_reply_hash[comment.id]
          .reply
            %p.text-14.color-gray-333.mg-b-10.bold.lh-20
              =t("comments.admin_reply")
            %p.date.text-12.lh-13.mg-b-10.color-gray-aaa
              = @comments_reply_hash[comment.id][:datetime]
            %p.text-13.color-gray-666.lh-20
              = @comments_reply_hash[comment.id][:context]

    / one other rating/comment
:javascript
  jQuery(document).ready(function($) {
    var skillsForm = document.getElementById("add_comment");
    skillsForm.addEventListener('ajax:success', function(res) {
      var data = jQuery.parseJSON(res.detail[0].data)
      var $commentsList = $('#comments-list');

      $commentsList.prepend(
        '<div class="one-rt-common">' +
          '<div>' +
            '<h2 class="name">' + data.name + '</h2>' +
            '<div class="stars stars-example-css mg-b-10">' +
              '<select class="star-sel-fixed" name="rating" autocomplete="off">' +
                '<option value="1">1</option>' +
                '<option value="2">2</option>' +
                '<option value="3">3</option>' +
                '<option value="4">4</option>' +
                '<option value="5">5</option>' +
              '</select>' +
            '</div>' +
            '<p class="comment">' +
              data.context +
            '</p>' +
          '</div>' +
        '</div>'
      );
      // Let option to become star style
      $commentsList.find('.star-sel-fixed').first().barrating({
        theme: 'fontawesome-stars',
        showSelectedRating: false,
        initialRating: data.rating,
      });

      // Remove form data
      $('#name-input, #context-input').val('');
    });
  });
