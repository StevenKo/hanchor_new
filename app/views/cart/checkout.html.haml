.loader

/ breadcrumbs
%section.breadcrumbs
  / rwd width limited
  .rwd-width-limited.clearfix
    .text-13.color-gray-666.lh-18.breadcrumb
      = render_breadcrumbs :separator => ' / '
  / rwd width limited
/ breadcrumbs
/ start main
.wrapper
  / full width block
  %section.bg-w.pd-v-20.mg-t-30.sidebar-point
    / rwd width limited
    .rwd-width-limited
      / sidebar and con
      .clearfix.sidebar-con
        / sd con
        .clearfix.sc-con
          / 
          = form_for @order, url: orders_path do |f|
            .member-sec.relative.mg-b-30.grid-800px
              %h2.title-line.inlineblock.mg-b-30 #{t("shopping_cart_locale.checkout_breadcrumb")}
              .input-form
                / one input
                .one-input
                  .title
                    %p
                      #{t("account.name_html")}
                  .input
                    = f.text_field :shipping_name, class: 'input-text mg-b-20', placeholder: t("placeholder.name"), value: @current_user.name
                    - if ["zh-TW","zh"].include?( params[:locale] )
                      %p.note #{t("cart.user_name_note")}
                / one input
                / one input
                .one-input
                  .title
                    %p
                      #{t("account.phone_html")}
                  .input
                    = f.text_field :phone, class: 'input-text mg-b-20', placeholder: t("placeholder.phone"), value: @current_user.phone
                / one input
                / one input
                .one-input
                  .title
                    %p
                      #{t("account.address_html")}
                  .input
                    = f.text_field :shipping_address, class: 'input-text mg-b-20', placeholder: t("placeholder.address"), value: @current_user.shipping_address
                / one input
                / one input
                .one-input
                  .title
                    %p
                      #{t("account.zip_code_html")}
                  .input
                    = f.text_field :zip_code, class: 'input-text mg-b-20', placeholder: t("placeholder.zip"), value: @current_user.zip_code
                / one input
                / one input
                .one-input
                  .title
                    %p
                      #{t("account.city_html")}
                  .input
                    = f.text_field :city, class: 'input-text mg-b-20', placeholder: t("placeholder.city"), value: @current_user.city
                / one input
                / one input
                .one-input
                  .title
                    %p
                      #{t("account.state_html")}
                  .input
                    = f.text_field :state, class: 'input-text mg-b-20', placeholder: t("placeholder.state"), value: @current_user.state
                    - if ["zh-TW","zh"].include?( params[:locale] )
                      %p.note #{t("cart.state_note")}
                / one input
                / one input
                .one-input
                  .title
                    %p
                      #{t("account.country_html")}
                  .input
                    = f.text_field :country, class: 'input-text mg-b-20', placeholder: t("placeholder.country"), value: @current_user.country
                / one input
                / one input
                .one-input
                  .title
                    %p
                      #{t("account.shipping_html")}
                  .input
                    = f.select  :shipping_cost_id, @shippings_selector,{prompt: t("placeholder.select_shipping")}, {class: "nice-sel-wrap nice_select"}
                - if @country_id == 1
                  #store{:style => "display: none;"}
                    .one-input
                      .title
                        %p
                        %span.note> ＊
                        #{t('cart.store')}
                      .input  
                        = link_to t('cart.search_store'),'http://map.ezship.com.tw/', class: "btn-s btn-blue inlineblock-imp", target: "_blank"
                    = f.fields_for :store do |child_form|
                      .one-input
                        .title
                          %p
                          %span.note> ＊
                          #{t('cart.num').html_safe}
                        .input 
                          = f.text_field :store_code, :class => "input-text mg-b-20"
                      .one-input
                        .title
                          %p
                          %span.note> ＊
                          #{t('cart.store_name').html_safe}
                        .input
                          = f.text_field :store_name, :class => "input-text mg-b-20"
                / one input
                / one input
                .one-input
                  .title
                    %p #{t("cart.comment")}
                  .input
                    - if ["zh-TW","zh"].include?( params[:locale] )
                      = text_area_tag :memo, nil,class: "input-text input-textarea mg-b-20", :placeholder => t("placeholder.note")
                    - else
                      = text_area_tag :memo, nil,class: "input-text input-textarea mg-b-20"
                / one input
            / 
            / line
            .gray-h-line.mg-b-40.grid-800px
            / line
            / 
            .member-sec.grid-800px.relative.mg-b-30
              %h2.title-line.inlineblock.mg-b-30 #{t("order.pay")}
              .clearfix.mg-b-30
                - if (["zh-TW","zh"].include?( params[:locale]))
                  .mg-b-20.clearfix.tw_payment
                    = f.radio_button :payment, "AllPay",checked: true, class: "pay-1 pay-radio"
                    %label.pay-text{:for => "pay-1"}
                      %img.pay-method-pic{:alt => "", :src => "https://www.allpay.com.tw/Content/Themes/WebStyle20131201/images/header_logo.png"}/
                  .mg-b-20.clearfix.tw_payment
                    = f.radio_button :payment, "PayPal", class: "pay-2 pay-radio"
                    %label.pay-text{:for => "pay-2"}
                      %img.pay-method-pic{:alt => "", :src => "https://www.paypal.com/en_US/i/bnr/horizontal_solution_PPeCheck.gif"}/
                  .mg-b-20.clearfix.tw_payment
                    = f.radio_button :payment, "transfer", class: "pay-3 pay-radio"
                    %label.pay-text{:for => "pay-3"} #{t("cart.transfer_bank")}
                -else
                  .mg-b-20.clearfix
                    = f.radio_button :payment, "PayPal",checked: true, class: "pay-2 pay-radio"
                    %label.pay-text{:for => "pay-2"}
                      %img.pay-method-pic{:alt => "", :src => "https://www.paypal.com/en_US/i/bnr/horizontal_solution_PPeCheck.gif"}/
                .mg-b-20.clearfix.pay_when_shipped{:style => "display: none;"}
                  = f.radio_button :payment, t('cart.pay_when_shipped'), class: "pay-4 pay-radio"
                  %label.pay-text{:for => "pay-4"} #{t('cart.pay_when_shipped')}
            / 
            / line
            .gray-h-line.mg-b-40.grid-800px
            / line
            / 
            .member-sec.grid-800px.relative.mg-b-30
              %h2.title-line.inlineblock.mg-b-30 #{t("cart.order")}
              .clearfix.mg-b-30
                - @cart_items.each_with_index do |item, i|
                  .one-scart.clearfix
                    .pic
                      = image_tag @cart_products[i].thumb.pic.thumb.url, :itemprop => "image", :class => "v-centerimg"
                    .os-rwd-float
                      .info
                        %h3.product-name= @cart_products[i].name
                        %p.product-color
                          #{item.product_color.color}
                          - if item.product_color.pic.blank?
                            %span.product-color-hex{:style => "background:#{item.product_color.rgb};"}
                          - else
                            %span.product-color-hex{:style => "background:url(#{item.product_color.pic_url(:thumb)}) !important;"}
                        %p.product-price= showed_price(item.price)
                      .qty
                        %p.per-qty #{t("cart.quantity")}：#{item.quantity}
                        %p.per-price #{t("cart.subtotal")}：#{showed_price(item.price * item.quantity)}
                      .btn-sec
                        = button_to remove_cart_item_cart_index_path(item_id: item.id), class: "btn-line btn-line-blue" do
                          #{t("cancel")}
                          %i.fa.fa-trash-o.mg-l-10{"aria-hidden" => "true"}
              .tright
                .price-show
                  %p.scart-total-price-s.mg-b-10
                    %span.color-gray-333> #{t("cart.subtotal")}
                    =" #{showed_price(sum_cart_items_price @cart_items)}"
                  - if @coupon && @is_useable.is_valid
                    %p.scart-total-price-s.mg-b-10
                      %span.color-gray-333> #{t("cart.coupon_code")}
                      =" #{params[:code]}"
                      %span.mg-l-10.color-red #{discount_text(@coupon,@is_useable.discount_sum)}
                  %p.scart-total-price-s.mg-b-10
                    %span.color-gray-333> #{t("cart.shipping_cost")}
                    =" #{showed_price(0)}"
                  %p.scart-total-price.mg-b-40
                    %span.color-gray-333> #{t("cart.sum")}
                    =" #{showed_price(calculate_total(sum_cart_items_price(@cart_items), @coupon, @is_useable))}"
                    
                .mg-b-30.text-15.lh-30.color-gray-333.bold
                  #{t("cart.read_shopping_gudide_message")}
                  = link_to(t("cart.shopping_guide"), shopping_guide_path,{:class=>"bold color-lb mg-b-17",:hov => "0.75"})
                .scart-submit
                  = f.hidden_field :sub_total, value: sum_cart_items_price(@cart_items)
                  = f.hidden_field :item_num, value: @cart_items.size
                  = hidden_field_tag :locale, params[:locale]
                  = hidden_field_tag :code, params[:code]
                  = button_tag(type: 'submit', class: "btn-l btn-blue inlineblock-imp", data: { confirm: t('cart.confirm_message')}, :hov => "0.75") do
                    #{t("cart.confirm")}
                    %i.fa.fa-chevron-right.mg-l-20{"aria-hidden" => "true"}
          / 
        / sd con
      / sidebar and con
    / rwd width limited
  / full width block
/ end main
